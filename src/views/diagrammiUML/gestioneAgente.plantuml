@startuml
package Boundary{


class ProfilePage {
  - agencyInfo: object
  - avatar: string
  - isAdminOpen: boolean
  - isAgentOpen: boolean
  - isEditAgencyOpen: boolean
  - isChangePasswordOpen: boolean
  + handleLogout(): void
  + openPasswordChange(): void
  + closePasswordChange(): void
  + openAdminDialog(): void
  + closeAdminDialog(): void
  + openAgentDialog(): void
  + closeAgentDialog(): void
  + openEditAgencyDialog(): void
  + closeEditAgencyDialog(): void
  + updateAvatar(avatar: string): void
  + fetchSavedProperties(pageParam: number): object
  + fetchUploadedProperties(pageParam: number): object
  + render(): JSX.Element
}

class AgentDashboard {
  - agents: array
  - newAgent: object
  - currentUser: object
  + fetchAgents(): void
  + handleDelete(id: string): void
  + handleChange(event: object): void
  + handleSubmit(event: object): void
  + render(): JSX.Element
}

ProfilePage --> AgentDashboard

}

package UserController {
class UserController {
    + addAdmin(req, res)
    + addAgency(req, res)
    + addAgent(req, res)
    + getAgents(req, res)
    + getAdmins(req, res)
    + getAgencies(req, res)
    + deleteAdmin(req, res)
    + deleteAgency(req, res)
}
}
package Entity{
entity User {
  * id : Int
  * email : String
  * username : String
  * passwordHash : String
  * role : String
  - avatar : String?
  * createdAt : DateTime
}
entity RealEstateAgency {
  * id : Int
  * name : String
  * address : String
  * city : String
  - phone : String?
  * email : String
  - website : String?
  - avatar : String?
  * createdAt : DateTime
}

entity AgencyUser {
  * id : Int
  * agencyId : Int
  * userId : Int
  * role : String
  * assignedAt : DateTime
}


}
ProfilePage --> UserController
UserController -->Entity
@enduml
