@startuml
class Views
class ListPage {
  - isMapOpen: boolean
  - isSmallScreen: boolean
  - searchParams: object
  - query: string
  + fetchProperties({pageParam, queryKey}): Promise
  + useEffect(handleResize, [])
  + useEffect(refetch, [query])
}

class MapComponent {
    - selectedMarker: object | null
  - center: object | null
  - isLoaded: boolean
  - loadError: boolean
  + render(items: object[]): JSX.Element
  + useEffect(setCenter, [items])
}

class Filter {
    - priceOptionsBuy: int[]
  - priceOptionsRent: int[]
  - raggioOptions: int[]
  - query: object
  - advancedFilters: object
  - isDeepSearchOpen: boolean
  - suggestions: string[]
  + openDeepSearch(): void
  + closeDeepSearch(): void
  + handleChange(e: object): void
  + handleSelectSuggestion(city: string): void
  + getCityCoordinates(cityName: string): object
  + handleFilter(): void
  + applyFilters(filters: object): void
  + handlePriceChange(e: object): void
  + resetFilters(): void

}

class Build {

  + render(item: object): JSX.Element
}
class DeepSearch {
  - filters: object
  + handleChange(e: object): void
  + applyFilters(): void
  + useEffect(savedFilters, isOpen): void
}


ListPage --> MapComponent : "Contiene"
ListPage --> Filter : "Contiene"
ListPage --> Build : "Itera su lista"
Filter --> DeepSearch : "Apre e gestisce"

@enduml
